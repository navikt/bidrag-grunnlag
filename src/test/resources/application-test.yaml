FAMILIEBASAK_URL: http://localhost:${wiremock.server.port}/familiebasak
FAMILIEEFSAK_URL: http://localhost:${wiremock.server.port}/familieefsak
PENSJON_URL: http://localhost:${wiremock.server.port}/pensjon
INNTEKTSKOMPONENTEN_URL: http://localhost:${wiremock.server.port}/inntektskomponenten
SIGRUN_URL: http://localhost:${wiremock.server.port}/sigrun
BIDRAGPERSON_URL: http://localhost:${wiremock.server.port}/bidragperson
KONTANTSTOTTE_URL: http://localhost:${wiremock.server.port}/kontantstotte
FAMILIEKSSAK_URL: http://localhost:${wiremock.server.port}/familiekssak
AAREG_URL: http://localhost:${wiremock.server.https-port}/aareg
EREG_URL: http://localhost:${wiremock.server.https-port}/ereg
BIDRAG_ORGANISASJON_URL: http://localhost:${wiremock.server.https-port}/organisasjon
NAIS_APP_NAME: bidrag-grunnlag
spring:
  config.activate.on-profile: test, local
  flyway.enabled: false
  datasource.type: com.zaxxer.hikari.HikariDataSource
  datasource.url: jdbc:h2:mem:default
  #  datasource.url: jdbc:h2:file:/Users/R153961/Dev/bidrag-grunnlag/src/main/resources/data
  h2.console.enabled: true
  jpa.hibernate.hbmddl-auto: create-drop
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:${mock-oauth2-server.port}/azure
      client:
        registration:
          familiebasak:
            provider: aad
            client-id: someid
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: api://familiebasak/.default
          pensjon:
            provider: aad
            client-id: someid
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: api://pensjon/.default
          inntektskomponenten:
            provider: aad
            client-id: someid
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: api://inntektskomponenten/.default
          sigrun:
            provider: aad
            client-id: someid
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: api://sigrun/.default
        provider:
          aad:
            token-uri: http://localhost:${mock-oauth2-server.port}/azure/token
            jwk-set-uri: http://localhost:${mock-oauth2-server.port}/azure/jwks
        aareg:
            provider: aad
            client-id: someid
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: api://aareg/.default

no.nav.security.jwt:
  client:
    registration:
      bidrag-organisasjon:
        resource-url: ${BIDRAG_ORGANISASJON_URL}
        token-endpoint-url: http://localhost:${mock-oauth2-server.port}/azure/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://org/.default
        authentication:
          client-id: someid
          client-secret: secret
          client-auth-method: client_secret_post
  issuer:
    aad:
      discovery_url: http://localhost:${mock-oauth2-server.port}/aad/.well-known/openid-configuration
      accepted_audience: aud-localhost
spring.kafka:
  properties:
    schema:
      registry.url: http://unused-dummy-url
      security.protocol: PLAINTEXT
  consumer:
    group-id: test
    auto-offset-reset: earliest
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
